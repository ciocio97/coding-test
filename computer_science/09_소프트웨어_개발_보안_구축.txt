<소프트웨어 개발 보안 설계>
--SW 개발 보안?
    --소프트웨어 개발 과정에서, 보안을 고려하여 기능을 설계 및 구현하는 활동
    --SW 개발 보안 3대 요소: 기밀성(Confidentiality): 시스템 내의 정보와 자원은 '인가된 사용자에게만 접근' 허용
                            무결성(Integrity): 시스템 내의 정보는 '인가된 사용자만 수정' 가능
                            가용성(Availability): 인가받은 사용자는 애플리케이션이나 서비스를 지속적으로 사용할 수 있도록 보장

--SW 개발 보안을 필요케하는 공격기법들 ;;
    --Dos 공격: (Denial of Service) =                                                           <서비스 거부 공격>
                시스템을 악의적으로 공격해서 해당 시스템의 자원을 부족하게 하여 원래 의도된 용도로 사용하지 못하게 하는 공격

                --SYN 플러딩: (SYN Flooding) TCP 프로토콜의 구조적인 문제를 이용한 공격
                                            클라이언트에서 SYN 패킷만 보내 서버의 동시 사용자 수를 점유하여 다른 사용자가 서버를 사용하지 못하게 하는 공격
                                          -> TCP vs UDP ?
                                             TCP(Transmission Control Protocol)
                                             : 메세지를 보내기 전에, 3-way-handshake 과정을 통해서 메세지를 정상적으로 전달할 수 있는 지 확인함.
                                                                 -> 3 차례의 패킷을 주고받는 과정을 거쳐야만 TCP 연결이 성립된다.
                                                                 -> Client -------SYN-----> Server : 포트 열려있나요? 
                                                                 -> Client <---SYN + ACK--- Server : 네, 열려있습니다.
                                                                 -> Client -------ACK-----> Server : 그럼 들어가겠습니다~!
                                             UDP(User Datagram Protocol)
                                             : 어떠한 협상과정 없이 메세지를 실어 보내기만 하고, 받았는 지 안 받았는 지 신경쓰지 않음.
                
                --스머핑(Smurfing): IP나 ICMP의 특성을 악용하여 엄청난 양의 데이터를 한 사이트에 집중적으로 보내는 공격
                                   출발지 주소를 공격 대상의 IP로 설정하여 네트워크 전체에 'ICMP Echo 패킷을 직접 브로드캐스팅'하여 마비시키는 공격

                --죽음의 핑(PoD): (Ping of Death) ICMP 패킷(Ping)을 정상적인 크기보다 아주 크게 만들어 전송하여 마비시키는 공격

                --랜드 어택(Land Attack): '출발지 IP와 목적지 IP를 같은 패킷 주소로 만들어 보냄'으로써 수신자가 자기 자신에게 무한하게 응답하게 하는 공격

                --티어 드롭(Tear Drop): IP 패킷의 재조합 과정에서 잘못된 'Fragment Offset' 정보로 인해 수신시스템이 문제를 발생하도록 하는 공격

                --RUDY(Slow HTTP POST Dos): 요청 헤더의 Content-length를 비정상적으로 크게 설정하여, 
                                            메세지 바디 부분을 매우 소량으로 보내 연결 상태를 계속 유지시켜 자원을 소진시키는 공격

    --DDos 공격: 여러 대의 공격자를 분산 배치하여 동시에 동작하게 함으로써 특정 사이트를 공격하는 기법. <분산 서비스 거부 공격>

        --DDos 공격 구성요소: 

            --핸들러(Handler) : 마스터 시스템의 역할을 수행하는 프로그램
            --에이전트(Agent) : 공격 대상에 직접 공격을 가하는 시스템
            --마스터(Master) : 공격자에게서 직접 명령을 받는 시스템. 여러대의 에이전트를 관리함
            --공격자(Attacker) : 공격을 주도하는 해커의 컴퓨터
            --데몬 프로그램(Daemon) : 에이전트 시스템의 역할을 수행하는 프로그램

    --DRDos 공격: 공격자는 출발지 IP를 공격 대상 IP로 위조하여, 다수의 '반사 서버'로 요청 정보를 전송, 
                  공격 대상자는 반사 서버로부터 다량의 응답을 받아서 서비스 거부(Dos)가 되는 공격.     <분산 반사 서비스 거부 공격>

    --네트워크 공격

                --스니핑(Sniffing): 공격 대상에게 직접 공격하지 않고 데이터만 몰래 들여다보는 수동적 공격

                --스니퍼(Sniffer): = (네트워크 스캐너) / 네트워크 하드웨어 및 소프트웨어 구성의 취약점을 파악하기 위해 탐색하는 공격 도구
                
                --IP 스푸핑(IP Spoofing):
                
                --ARP 스푸핑(ARP Spoofing): 공격자가 특정 호스트의 MAC주소를 자신의 MAC주소로 위조한 ARP Reply를 만들어,
                                            희생자에게 지속적으로 전송하여 희생자의 ARP Cache table에 특정 호스트의 MAC 정보를 공격자의 MAC정보로 변경,
                                            희생자로부터 특정호스트로 나가는 패킷을 공격자가 스니핑하는 기법.
                
                --ICMP Redirect 공격: 
                
                --트로이 목마(Trojan Horses): 악성 루틴이 숨어 있는 프로그램으로, 겉보기엔 정상적인 프로그램으로 보이지만 실행하면 악성 코드를 실행하는 프로그램.

                --TCP 세션 하이재킹: 가. TCP Sequence number의 보안상 문제점때문에 발생
                                    나. Victim과 Server 사이의 패킷을 스니핑하여 Sequence number을 획득하고,
                                        공격자는 데이터 전송중인 Victim과 Server 사이를 비동기화 상태로 강제적으로 만듦
                                    다. 스니핑하여 획득한 Client Sequence Number을 이용하여 공격
                                    라. 공격자는 Server에게 RST 패킷을 날리고, 공격자의 새로운 Sequence Number로 Server와 세션을 맺어 
                                        인증 우회, Victim 권한으로 Server 접근
                                    마. 비동기화 상태로 패킷이 유실되어 재전송 패킷 증가
                                    바. 이 과정에서 ACK Stom증가, NW 부하 증가
                                    
                                    --케빈 미트닉이 사용. TCP의 세션 관리 취약점을 이용한 공격 기법
                                    --TCP 세션 하이재킹에 대응하기 위해선, 비동기화 상태 탐지 / ACK 패킷 비율 모니터링 
                                      / 특정 세션에서 패킷 유실 및 재전송이 증가되는 것을 탐지해야 함
                            

    --시스템 보안 위협

                --버퍼 오버플로우(Buffer Overflow) 공격: 메모리에 할당된 버퍼 크기를 초과하는 양의 데이터 입력으로 인해
                                                        프로세스의 흐름을 변경시켜서 악성 코드를 실행시키는 공격기법.
                    
                    --스택 버퍼 오버플로우(Stack Buffer overflow): 메모리 영역 중 Local value나 Return Adress가 저장되는 스택영역에서 발생하는 공격
                    --힙 버퍼 오버플로우:(Heap Buffer overflow): 프로그램 실행 시 동적으로 할당되는 힙 영역에서, 할당된 버퍼 크기를 초과하는 데이터를 입력하여 공격자가 원하는 임의의 코드를 실행하는 공격

                        --버퍼 오버플로우 대응 방안: 01 운영체제 주기적 최신 패치 적용
                                                   02 입력갑 검증이 가능한 안전한 함수 사용 ex. Strncpy()
                                                   03 스택가드(Stackguard): 카나리(canary)라고 불리는 무결성 체크용 값을 복귀 주소와 변수 사이에 삽입해 두고
                                                                             버퍼 오버 플로우 시, 카나리 값이 변하게 되면 복귀 주소를 호출하지 않는 방법
                                                   04 스택 쉴드(Stack shield): 함수 시작 시 복귀 주소를 Global RET라는 특수 스택에 저장해 두고, 함수 종료 시
                                                                              저장된 값과 스택의 RET값을 비교해서 다를 경우 오버플로우로 간주하고 프로그램 실행을 중단하는 방법
                                                   05 ASLR(Adress Space Layout Randomization): 메모리 공격을 방어하기 위해 주소 공간 배치를 난수화하고,
                                                                                               실행 시 마다 메모리 주소를 변경시켜 버퍼 오버플로우를 통한 특정 주소 호출을 차단하는 방법

                --백도어(Backdoor):

    --보안 관련 용어

                --스피어 피싱(Spear Phishing): 사회 공학의 한 기법, 일반적인 이메일로 위장한 메일을 지속적으로 발송하여, 
                                              본문 링크나 첨부된 파일을 클릭 시 사용자의 개인정보 탈취

                --스미싱(Smishing): SMS(문자메세지) + Phishing(피싱) 합성어
                                    사칭한 문자메세지를 이용하여 개인정보를 요구하거나 소액 결제를 유도

                --큐싱(Qshing): QR code(QR 코드) + Phishing(피싱) 합성어
                                QR 코드를 통해 악성앱을 내려받도록 유도, 금융 정보를 빼내는 피싱 공격

                --봇넷(Botnet): 악성 프로그램에 감염되어 의도적으로 사용될 수 있는 다수의 컴퓨터들이 네트워크에 연결된 형태

                --APT(Advanced Persistent Threat) 공격: 특수 목적의 조직이 하나의 표적에 대해 지속적으로 정보를 수집하고,
                                                        취약점을 분석하여 피해를 주는 공격 기법.

                --제로데이 공격(Zero Day Attack): 보안 취약점이 발견되어 공표되기 전에 해당 취약점을 악용하여 이루어지는 보안 공격법
                                                 === 공격의 신속성. -> 일어나면 대처 방안이 없음;;

                --웜(Worm): 스스로를 복제하여 네트워크 등의 연결을 통하여 전파하는 악성 소프트웨어 컴퓨터 프로그램
                            다른 바이러스에 비해 웜은 독자적으로 실행되는 특징이 있음

                --랜섬웨어(Ransomware): 시스템 파일을 암호화한 후, 파일을 인질처럼 잡고 피해자에게 몸값을 요구하는 악성 소프트웨어

                --키로거 공격(Key Logger Attack): 컴퓨터 사용자의 키보드 움직임을 탐지해서 저장하고, ID나 PW, 계좌 번호, 카드 번호등과 같은
                                                 개인의 중요한 정보를 몰래 빼내가는 해킹 공격.

                --루트킷(Rootkit): 시스템 침입 후 침입 사실을 숨긴 채 차후의 침입을 위한 백도어, 트로이 목마 설치, 원격 접근, 내부 사용 흔적 삭제,
                                   관리자 권한 획득 등 주로 불법적인 해킹에 사용되는 기능을 제공하는 프로그램의 모음 !! 모음집 !!

                --이블 트윈 공격(Evil Twin): 무선 Wifi 피싱 기법으로 공격자는 합법적인 Wifi 제공자처럼 행세하며 노트북이나 휴대 전화로
                                            핫스팟에 연결한 무선 사용자들의 정보를 탈취하는 무선 네트워크 공격 기법.

                --공급망 공격(Supply Chain Attack): 소프트웨어 개발사의 네트워크에 침투하여 소스 코드의 수정등을 통해 악의적인 코드를 삽입하거나
                                                   배포 서버에 접근하여 악의적인 파일로 변경하는 방식을 통해 사용자 PC에 소프트웨어를 설치 또는
                                                   업데이트 시에 자동적으로 감염되도록 하는 공격기법.

                --사회 공학(Social Engineering): 컴퓨터 보안에 있어서, 인간 상호 작용의 깊은 신뢰를 바탕으로 사람들을 속여서 
                                                 정상 보안 절차를 깨트리기 위한 비기술적 시스템 침입 수단.
                                                 사례로는 상대방의 자만심이나 권한을 이용하는 공격 및 도청이 있음

                --그레이웨어(Grayware): 바이러스나 명백한 악성 코드를 포함하지 않는 합법적 프로그램이면서, 사용자를 귀찮게 하거나 위험한 상황에 빠뜨릴 수 있는 프로그램.
                                       즉, 평범한 소프트웨어인지 바이러스인지 구분하기 어려운 중간 영역에 존재하는 프로그램으로 
                                       스파이웨어, 애드웨어, 원격 액세스 도구 등 사용자가 원하지 않는 프로그램을 총칭

--서버 인증 및 접근 통제

    --인증 기술: 

        --지식기반 인증: 사용자가 기억하고 있는 지식 ex. ID, PW
        --소지기반 인증: 사용자가 소지하고 있는 물품 ex. 공인인증서, OTP
        --생체기반 인증: 사용자의 고유한 정보  ex. 홍채, 얼굴, 정맥, 지문
        --특징기반 인증: 사용자의 특징을 활용  ex. 서명, 발걸음, 몸짓

    --접근 통제 용어:

        --식별(identification): 주체가 객체에게 자신의 정보를 제공하는 행위
        --인증(Authentication): 주체의 신원을 객체가 인정해주는 행위
        --인가(Authorization):  인증된 주체에게 접근을 허용하는 행위
        --책임추적성(Accountability): 주체의 접근을 추적하고 행동을 기록하는 행위

    --접근 통제 유형: (기준에 따른) 시스템에 대한 접근을 제한하는 방법
        
        --DAC(Discretionary Access Control): 임의적 접근 통제: 사용자의 신분 기준
        --MAC(Mandatory Access Control): 강제적 접근 통제: 시스템 정보의 허용등급 기준
        --RBAC(Role Based Access Control): 역할기반 접근 통제: 조직 내 맡은 역할 기준

    --접근 통제 보호 모델:

        --벨-라파듈라 모델: 기밀성 강조 -> No Read Up, No Write Down
        --비바 모델: 무결성 강조 -> No Read Down, No Write Up


--SW 개발 보안을 위한 암호화 알고리즘

    --암호 알고리즘 

        --양방향 (암호화/복호화)

            --대칭 키 암호 방식 (암호화 키 = 복호화 키) -> 개인키(비밀키) 암호화
                
                --스트림 암호
                        : RC4 -> 매우 긴 주기의 난수열을 발생시켜 평문과 더불어 암호문을 생성하는 방식
                
                --블록 암호
                    --Feistel (암호화 과정 = 복호화 과정)
                        : DES -> 미국 연방 표준국(NIST) / 블록크기 64bit, 키 길이 56bit
                        : 3DES
                        : SEED -> 한국인터넷진흥원(KISA) 개발 / 블록크기 128bit, 키 길이 128 or 256bit
                        : ARIA -> 국가정보원 & 산학연구협회가 개발 / 블록크기 128bit, 키 길이 128 or 192 or 256bit

                    --MAC (암호화 과정 != 복호화 과정)
                        : AES -> DES 대체 / 미국표준기술연구소(NIST) / 고급 암호화 표준 / 블록크기 128bit, 키 길이 128 or 192 or 256bit
                                 Round 수는 10, 12, 14. 한 라운드는 SubBytes, ShiftRows, MixColumns, AddRoundKey, 총 4가지 계층으로 구성됨
            
            --비대칭 키 암호 방식 (암호화 키 != 복호화 키) -> 공개키 암호화

                        : DH -> 디피-헬만(Diffe-Helllman) / 최초의 공개키 알고리즘
                        : RSA -> MIT 공개키 암호화 알고리즘 / 소인수 분해 이용
                        : ECC -> 타원 곡선 암호(ECC) / 이산대수 문제 기초 / RSA 대안으로 제안
                        : EIGamal -> 이산대수 기본 원리 / RSA와 유사함
        
        --일방향 (암호화)

            --해시함수 -> 해시 암호화 알고리즘이 적용된 정보는 복호화 불가능. 되돌릴 수 없을 정도로 어렵게 변환됨

                --MDC: 키를 사용하지 않는 변경 감지 코드. -> 메세지의 무결성을 보장하는 방식.              (키X)
                        : MD5 -> MD4 개선 / 프로그램이나 파일의 무결성 검사에 사용
                        : SHA-1 -> NSA에서 미 정부 표준으로 지정 / DSA에서 사용
                        : SHA-256 -> 256비트의 해시값 생성 / 출력 속도가 빠름 / 단방향성 성질

                --MAC: 키를 사용하는 메세지 인증 코드. -> 메세지의 무결성과 송신자의 인증을 보장하는 방식.  (키O)
                        : HMAC
                        : NMAC

--안전한 전송을 위한 데이터 암호화 전송

    --IPSec
        : (Internet Protocol Security)
        : IPSec는 IP계층(3계층)에서 무결성과 인증을 보장하는 인증 헤더(AH)와
          기밀성을 보장하는 암호화(ESP)를 이용한 IP 보안 프로토콜.
            --인증(AH)프로토콜: (Authentication Header) 무결성, 인증 제공
            --암호화(ESP)프로토콜: (Encapsulation Security Payload) 기밀성, 무결성, 인증 제공
            --키 관리(IKE)프로토콜: Key를 주고받는 알고리즘

            --전송 모드 & 터널 모드

    --SSL/TLS
        : (Secure Socket Layer) (Transport Layer Security)
        : 전송 계층(4계층)과 응용 계층(7계층) 사이에서 클라이언트와 서버 간의
          웹 데이터 암호화(기밀성), 상호 인증 및 전송 시 데이터 무결성을 보장하는 보안 프로토콜.
            --Change Cipher Spec Protocol: 협상된 Cipher Spec을 상대에게 알림.
            --Alert Protocol: SSL/TLS 관련 경고 메세지 전달.
            --Heartbeat Protocol: 서버와 클라이언트가 정상적인 상태인 지 확인하기 위하여 사용.
            --Handshake Protocol: 서버와 클라이언트가 서로 인증하고 암호화 키를 협상하는 프로토콜.
            --Record Protocol: 협상된 Cipher Suite로 암호화, 복호화, 무결성, 압축, 해제 등 수행.

    --S-HTTP
        : (Secure Hypertext Transfer Protocol)
        : 웹 상에서 네트워크 트래픽을 암호화하는 주요 방법.
        : 클라이언트와 서버 간에 '전송되는 모든 메세지를 각각 암호화'하여 전송하는 기술.
        : HTTP를 사용한 애플리케이션에 대해서만 가능.

    -SSH (Secure Shell)
        : 시큐어 셸
        : 네트워크 상의 다른 컴퓨터에 로그인하거나 '원격 시스템'에서 명령을 실행하고, 
          다른 시스템으로 파일을 '복사'할 수 있도록 해주는 프로토콜
        : 키를 통한 인증은 클라이언트의 공개키를 서버에 등록해야
        : 기존의 RSH, rlogin, 텔넷 등을 대체하기 위해 설계되었으며, 강력한 인증 방법 및 암호화 통신 제공
        : 기본적으로는 ''22번 포트' 사용

--SW 개발 보안 적용 사례

    --SDLC: 소프트웨어 개발 보안 생명 주기 방법론
        
        --Secure SDLC 모델 및 방법론
            --BSIMM: 미국 국토안보국의 지원
            --Open SAMM: OWSAP에서 개발
            --Seven TouchPoint: 실무적으로 검증된 개발 보안 방법론 / SW 보안 모범 사례를 SDLC에 통합함
            --MS SDL: 마이크로소프트사 개발
            --OWASP CLASP: 이미 운영 중인 시스템에 적용하기 쉬운 보안 개발 방법론

--nmap: 고든 라이온(Gordon Lyon)이 작성한 보안 스캐너(포트 스캐너)
        시스템을 공격하기 전에 보안 취약점을 탐지하는 도구
        공격의 대상이 되는 시스템이 사용하고 있는 IP, 포트, OS를 탐지하는 도구
        서버에 열린 포트 정보를 스캐닝해서 보안 취약점을 찾는데 사용된다

---------------------------------------------------------------------------------------------------------------

Q1. 공격자가 패킷의 출발지 주소나 포트를 임의로 변경해서 출발지와 목적지 주소를 동일하게 함으로써 
    공격 대상 컴퓨터의 실행 속도를 느리게 하거나 동작을 마비시켜서 서비스 거부 상태에 빠지도록 하는 공격 방법은?
    --랜드 어택(Land Attack)

Q2. RFC 1321로 지정되어 있으며, 주로 프로그램이나 파일이 원본 그대로인지를 확인하는 무결성 검사 등에 사용된다.
    1991년도 로널드 라이베스트가 예전에 쓰이던 MD4를 대체하기 위해 고안된 128비트 암호화 해시 함수는 무엇인가?
    --MD5

Q3. 스니핑(Sniffing)에 대해 서술하시오.
    --공격 대상에게 직접 공격하지 않고, 데이터만 몰래 들여다보는 수동적인 공격기법이다. 

Q4. 무결성과 인증을 보장하는 인증헤더(AH)와 기밀성을 보장하는 암호화(ESP)를 이용한 프로토콜로
    네트워크 계층인 인터넷 프로토콜(IP)에서 보안성을 제공해주는 표준화된 기술에 대해서 작성하시오.
    --IPSec

Q5. 정보 보안에서 가용성(Availability)에 대하여 서술하시오.
    --인가 받은 사용자가 원하는 애플리케이션이나 서비스를 지속적으로 사용할 수 있도록 보장하는 특성이다.

---------------------------------------------------------------------------------------------------------------

<소프트웨어 개발 보안 구현>
--시큐어 코딩 가이드

    --세션 통제
        : 세션의 연결과 관련되어 발생할 수 있는 취약점을 예방하기 위한 보안 점검 항목들
          소프트웨어 개발 과정 중 요구사항 분석 및 설계 단계에서 진단해야 하는 보안 점검 내용
        : 세션이란? 서버와 클라이언트의 연결을 의미.

    --입력데이터 검증 및 표현
        : 입력 데이터로 인해 발생하는 문제들을 예방하기 위해 구현 단계에서 검증해야 하는 보안 점검 항목들
            
            --XSS: (Cross Site Script) 검증되지 않은 외부 입력 데이터가 포함된 웹 페이지가 전송되는 경우,
                    해당 웹페이지에 포함된 부적절한 스크립트가 실행되는 공격 

            --SQL Injection: (SQL 삽입) 응용 프로그램의 보안 취약점을 이용해서 악의적인 SQL 구문을 삽입, 실행시켜
                              DB 접근을 통해 정보를 탈취하거나 조작하는 공격 기법

            --CSRF(Cross-Site Request Forgery): 사용자가 자신의 의지와는 무관하게 공격자가 의도한 행위(수정,삭제,등록 등)를 특정 웹사이트에 요청하게 하는 기법

    --보안 기능
        : 소프트웨어 개발 단계에서 인증, 접근 제어, 기밀성, 암호화, 권한 관리 등을 적정하게 구현하기 위한 
          보안 점검 항목들

    --시간 및 상태


    --에러 처리
        : 프로그램 실행 시 발생할 수 있는 오류들을 사전에 정의하여, 오류로 인해 발생할 수 있는 문제들을 예방하기 위한
          보안 점검 항목들

    --코드 오류
        : 소프트웨어 구현 단계에서 개발자들이 코딩 중 실수하기 쉬운 오류들을 예방하기 위한 보안 점검 항목들

    --캡술화
        : 

    --API 오용
        : 소프트웨어 구현 단계에서 API를 잘못 사용하거나 보안에 취약한 API를 사용하지 않도록 하기 위한 보안 검증 항목들

--비즈니스 연속성 계획(BCP)
    --비즈니스 연속성 계획(BCP)이란? : 각종 재해, 장애, 재난으로부터 위기관리를 기반으로
                                     재해복구, 업무복구 및 재개, 비상계획 등을 통해 비즈니스 연속성을 보장하는 체계
                                   : Business Continuity Plan

    --비즈니스 연속성 계획 관련 주요 용어
        
        --BIA : Business Impact Analysis / 시간 흐름에 따른 영향도 및 손실 평가를 조사하는 BCP를 구축하기 위한 비즈니스 영향 분석
        --RTO : Recovery Time Objective / 업무 중단 시점부터 업무가 복구되어 다시 가동될 때까지의 시간         (재해 복구 시 목표 시간)
        --RPO : Recovery Point Objective / 업무 중단 시점부터 업무가 복구되어 다시 가동될 때, 데이터 손실 시점 (재해 복구 시 목표 지점)
        --DRP : Disaster Recovery Plan / 재난으로 장기간 시설 운영이 불가능한 경우를 대비한 재난 복구 계획
        --DRS : Disaster Recovery System / 재해 복구 계획의 원활한 지원하기 위하여 평상시에 확보하여 두는 인적, 물적 자원
                                         / 이들에 대한 지속적인 관리체계가 통합된 재해복구센터

--DRS (Disaster Recovery System)

    --Mirror Site
    --Hot Site
    --Warm Site
    --Cold Site

---------------------------------------------------------------------------------------------------------------

Q1. 정보시스템 운영 중 서버가 다운되거나 자연재해나 시스템 장애 등의 이유로 고객에게 서비스가 불가능한 경우가 종종 발생한다.
    이와 같은 상황에서 비상사태 또는 업무 중단 시점부터 업무가 복구되어 다시 정상 가동될 때까지의 시간을 의미하는 용어는 무엇인가?
    --RTO (Recovery Time Objective) 재해 복구 시간

---------------------------------------------------------------------------------------------------------------